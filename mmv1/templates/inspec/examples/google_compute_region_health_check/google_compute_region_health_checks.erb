<% gcp_project_id = "#{external_attribute(pwd, 'gcp_project_id', doc_generation)}" -%>
<% health_region = "#{external_attribute(pwd, 'gcp_compute_health_check_region_name', doc_generation)}" -%>

describe google_compute_region_health_checks(project: <%= gcp_project_id -%>, region: <%= health_region -%>) do
  its('types') { should include "TCP" }
end

<% if doc_generation -%>
```
  ### Use this InSpec resource to enumerate IDs then test in-depth using `google_compute_region`
```
  google_compute_region_health_checks(project: 'chef-inspec-gcp',  region: 'europe-west2').region_names.each do |region_name|
    describe google_compute_region(project: 'chef-inspec-gcp',  region: region_name) do
      it { should exist }
    end
  end
```

  ### Test that there are more than a specified number of regions available for the project
```
  describe google_compute_region_health_checks(project: 'chef-inspec-gcp',  region: 'europe-west2') do
    its('unhealthy_thresholds') { should eq 2}
  end
```
  ### Test that an expected region is available for the project
```
  describe google_compute_region_health_checks(project: 'chef-inspec-gcp',  region: 'europe-west2') do
    its('healthy_thresholds') { should include 2 }
  end
```
  ### Test whether any regions are in status "DOWN"
```
  describe google_compute_region_health_checks(project: 'chef-inspec-gcp',  region: 'europe-west2') do
    its('check_interval_secs') { should_not include 5 }
  end
```
<% end -%>